<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Luke's Blog</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml" />
<link rel="alternate" type="text/html" href="http://localhost:4000" />
<updated>2014-07-27T13:47:41+01:00</updated>
<id>http://localhost:4000/</id>
<author>
  <name>Luke Crooks</name>
  <uri>http://localhost:4000/</uri>
  <email>luke@pumalo.org</email>
</author>


<entry>
  <title type="html"><![CDATA[Why I stopped using Django]]></title>
 <link rel="alternate" type="text/html" href="http://localhost:4000/why-i-stopped-django/" />
  <id>http://localhost:4000/why-i-stopped-django</id>
  <updated>2014-07-21T00:00:00-00:00</updated>
  <published>2014-07-21T00:00:00+01:00</published>
  
  <author>
    <name>Luke Crooks</name>
    <uri>http://localhost:4000</uri>
    <email>luke@pumalo.org</email>
  </author>
  <content type="html">&lt;p&gt;This is my own personal opinion, many people love Django, I however am not one of those users.&lt;/p&gt;

&lt;h3 id=&quot;background&quot;&gt;Background&lt;/h3&gt;

&lt;p&gt;I was an avid Django user for at least 18 months, using and contributing to several projects. At first everything was rosy, then I experienced upgrading from 1.25 to 1.3.&lt;/p&gt;

&lt;p&gt;When I first started with Django it was more due to the frustration with Ruby on Rails, I had several projects using Spree and Radiant CMS. I had been using Ruby/Rails for around a year, doing fairly small projects, it was great for what I needed, but I never really felt comfortable with it. I  honestly can’t remember what versions of Ruby I was using, but I think it was 1.8. I had a spree site, linked to a Radiant CMS, then spree upgraded to Ruby 1.9 and Radiant didn’t. To get the new features (and support) of spree, I ended up having to split my site across two applications, this ran for about 6 months, until I had given up fighting, and looked at writing a new platform.&lt;/p&gt;

&lt;p&gt;I eventually migrated to python (which I had used in college) and re-wrote my setup for Django. I used the brilliant Django-cms, I wrote a custom application adapted from Arkestra. This was a time when the CMS and Arkestra were both under rapid development, but I loved both projects and even helped contribute.&lt;/p&gt;

&lt;h3 id=&quot;the-honeymoon-period&quot;&gt;The honeymoon period&lt;/h3&gt;

&lt;p&gt;Everything was great, then django 1.3 became a final release and apps started moving, It wasn’t really a problem but I remember migrating from django admin media to static files and various other code changes, not something I really enjoyed. Then everything was fine again, untill 1.4 came out. This whole process really got on my nerves and changing code every version upgrade was a pain, especially when different libraries updated at different paces. Which basically means, if you want to use code that others have written for django, expect to be updating a lot of it as you migrate and projects get left behind.&lt;/p&gt;

&lt;p&gt;I ended up re-writing a lot of third party apps, just so I could migrate my CMS to the the latest version.&lt;/p&gt;

&lt;h3 id=&quot;and-then-i-needed-more&quot;&gt;And then I needed more&lt;/h3&gt;

&lt;p&gt;I was then approached to write a custom CRM system for a company, whilst evaluating the best options, I stumbled across Pyramid + SQLAlchemy. It was love at first sight, it was writing pure python with a few web renderers. I could see that major version upgrades wouldn’t be a problem, as I was just writing python.&lt;/p&gt;

&lt;p&gt;SQLAlchemy is just a god send, words cannot describe how awesome this package is.&lt;/p&gt;

&lt;p&gt;Coding with SQLAlchemy and Pyramid feels brilliant after coming from Django, there are literally no limitations, write what you want quickly and easily and knowing that I am not going to have a headache when a new major version comes out, is even better. Its been 18months with Pyramid now and the documentation and the community are brilliant.&lt;/p&gt;

&lt;p&gt;If you have a rainy day to have a go with Pyramid, do it. You won’t regret it.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/why-i-stopped-django/&quot;&gt;Why I stopped using Django&lt;/a&gt; was originally published by Luke Crooks at &lt;a href=&quot;http://localhost:4000&quot;&gt;Luke's Blog&lt;/a&gt; on July 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[PostgreSQL cheat sheet]]></title>
 <link rel="alternate" type="text/html" href="http://localhost:4000/psql-cheats/" />
  <id>http://localhost:4000/psql-cheats</id>
  <updated>2014-07-20T00:00:00-00:00</updated>
  <published>2014-07-20T00:00:00+01:00</published>
  
  <author>
    <name>Luke Crooks</name>
    <uri>http://localhost:4000</uri>
    <email>luke@pumalo.org</email>
  </author>
  <content type="html">&lt;p&gt;This post will be updated with any cool cheats/commands that I use on a daily basis, that may help others out.&lt;/p&gt;

&lt;h3 id=&quot;make-a-local-user-superuser&quot;&gt;Make a local user, superuser&lt;/h3&gt;

&lt;p&gt;Everytime I work on a new machine/enviroment I need to be able to create and delete databases as a local
user quickly and easily, I am by no means a PostgreSQL expert, but I need to be able to create databases,
ready for web application development. So the below code should get you started.&lt;/p&gt;

&lt;p&gt;First, login as the potgres user, and access the psql shell:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo su - postgres
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we need to create a new postgres user, for the sakes of this guide, lets assume the name
“luke” and obviously replace ‘somepassword’ with your own, secure password.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luke&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;somepassword&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we have the user setup, lets give him ‘Super User’ credentials:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luke&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUPERUSER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, open up a new termianl and you should be able to create and delete databases:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;createdb staff
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dropdb staff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/psql-cheats/&quot;&gt;PostgreSQL cheat sheet&lt;/a&gt; was originally published by Luke Crooks at &lt;a href=&quot;http://localhost:4000&quot;&gt;Luke's Blog&lt;/a&gt; on July 20, 2014.&lt;/p&gt;</content>
</entry>

</feed>
